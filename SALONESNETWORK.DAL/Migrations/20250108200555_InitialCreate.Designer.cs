// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SALONESNETWORK.DAL.Data;

#nullable disable

namespace SALONESNETWORK.DAL.Migrations
{
    [DbContext(typeof(SalonesDbContext))]
    [Migration("20250108200555_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Asunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Asuntos");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.DocumentoMensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Documento")
                        .HasColumnType("int");

                    b.Property<int>("Id_Mensaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Documento");

                    b.HasIndex("Id_Mensaje");

                    b.ToTable("DocumentoMensajes");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Asunto")
                        .HasColumnType("int");

                    b.Property<int>("Id_MensajeRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("Id_MensajeSeguimiento")
                        .HasColumnType("int");

                    b.Property<int>("Id_Pais")
                        .HasColumnType("int");

                    b.Property<int>("Id_Seccion")
                        .HasColumnType("int");

                    b.Property<int>("Id_SubSeccion")
                        .HasColumnType("int");

                    b.Property<int>("Id_TipoMensaje")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Respuesta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Seguimiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Asunto");

                    b.HasIndex("Id_Pais");

                    b.HasIndex("Id_Seccion");

                    b.HasIndex("Id_SubSeccion");

                    b.HasIndex("Id_TipoMensaje");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.RegistroVisita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RegistroVisitas");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Seccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.SubSeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubSecciones");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.TipoMensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TiposMensaje");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.UsuarioPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Perfil")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Perfil");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("UsuarioPerfiles");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.DocumentoMensaje", b =>
                {
                    b.HasOne("SALONESNETWORK.MODELS.Entities.Documento", "Documento")
                        .WithMany("DocumentoMensajes")
                        .HasForeignKey("Id_Documento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.Mensaje", "Mensaje")
                        .WithMany("DocumentoMensajes")
                        .HasForeignKey("Id_Mensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("Mensaje");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Mensaje", b =>
                {
                    b.HasOne("SALONESNETWORK.MODELS.Entities.Asunto", null)
                        .WithMany()
                        .HasForeignKey("Id_Asunto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.Pais", null)
                        .WithMany()
                        .HasForeignKey("Id_Pais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.Seccion", null)
                        .WithMany()
                        .HasForeignKey("Id_Seccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.SubSeccion", null)
                        .WithMany()
                        .HasForeignKey("Id_SubSeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.TipoMensaje", null)
                        .WithMany()
                        .HasForeignKey("Id_TipoMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.UsuarioPerfil", b =>
                {
                    b.HasOne("SALONESNETWORK.MODELS.Entities.Perfil", "Perfil")
                        .WithMany("UsuarioPerfiles")
                        .HasForeignKey("Id_Perfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SALONESNETWORK.MODELS.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioPerfiles")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Documento", b =>
                {
                    b.Navigation("DocumentoMensajes");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Mensaje", b =>
                {
                    b.Navigation("DocumentoMensajes");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Perfil", b =>
                {
                    b.Navigation("UsuarioPerfiles");
                });

            modelBuilder.Entity("SALONESNETWORK.MODELS.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioPerfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
